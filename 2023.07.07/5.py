# ИСПОЛЬЗОВАТЬ везде: оформление кода согласно PEP 8 — в качестве образца можно использовать код из репозитория _scripts

# ПЕРЕИМЕНОВАТЬ: целая часть числа — integer; дробная часть числа — fractional; мили — miles (сокращения допустимы)
mille = float(input('Введите количество миль :'))
tenths = float(input('Введите количество десятых : '))
# ИСПРАВИТЬ: этот способ не сработает, если пользователю потребуется ввести дробную часть для числа с количеством десятичных знаков больше одного (см. тест ниже) — придумайте более универсальное решение
mille_tenths = mille + tenths / 10

# КОММЕНТАРИЙ: если результат округления должен быть использован где-то ещё, тогда используете функцию round(); в данном случае выгоднее воспользоваться синтаксисом f-строк
# km = round(mille_tenths * 1.61)
# ИСПРАВИТЬ: явное использование функции str() в f-строках избыточно
# print(f"{str(mille_tenths)} миль = {str(km)} км ( округление до круглого функцией round )")

# УДАЛИТЬ: эта переменная каждый раз используется только единожды: синтаксис f-строк указывается отдельно для каждого подстановочного места, его следует применить в необходимом подстановочном месте в f-строке, передаваемой в print() — объявление данных переменных избыточно
# km_0 = f'{mille_tenths * 1.61:.2f}'
# print(f"{str(mille_tenths)} миль = {str(km_0)} км ( округление до сотых)")

km_0 = f'{mille_tenths * 1.61:.1f}'
# ИСПРАВИТЬ: вывод не соответствует требуемому формату (лишний текст)
print(f"{str(mille_tenths)} миль = {str(km_0)} км ( округление до десятых)")
# КОММЕНТАРИЙ: сначала научитесь с помощью разных инструментов генерировать строки точно в соответствии с заданным форматом, а потом уже используйте такой формат вывода, какой хотите

# ИСПОЛЬЗОВАТЬ везде: круглые скобки используются для литерала кортежа, изменения порядка вычисления выражений, вызова функций и записи составного выражения на нескольких строчках — больше нигде и никак
# km_0 = f'{mille_tenths * 1.61:.0f}'
# print(f"{str(mille_tenths)} миль = {str(km_0)} км ( округление до круглого f строкой )")

# КОММЕНТАРИЙ: создавайте новые переменные только тогда, когда это явно необходимо: не бойтесь перезаписывать значения существующих переменных, если старые значения более не используются


# Введите количество миль :5
# Введите количество десятых : 81
# КОММЕНТАРИЙ: а должно быть 5.81 миль
# 13.1 миль = 21 км ( округление до круглого функцией round )
# 13.1 миль = 21.09 км ( округление до сотых)
# 13.1 миль = 21.1 км ( округление до десятых)
# 13.1 миль = 21 км ( округление до круглого f строкой )

# ДОБАВИТЬ: результат выполнения программы с собственными данными


# ИТОГ: хорошо, но можно лучше — 3/5


# КОММЕНТАРИЙ: этот ресурс поможет вам лучше придумывать имена переменным: https://context.reverso.net/перевод/русский-английский
